@model IEnumerable<FlightManagerApp.Models.Flight>

@{
    ViewData["Title"] = "Home Page";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <title>Document</title>
</head>
<body>  
    <div class="main_container">
    <div class="text-center">

            <svg viewBox="0 0 3387 1270">
                <path id="planePath" class="planePath" d="M-226 626c439,4 636,-213 934,-225 755,-31 602,769 1334,658 562,-86 668,-698 266,-908 -401,-210 -893,189 -632,630 260,441 747,121 1051,91 360,-36 889,179 889,179" />
                <g id="plane">
                    <polygon class="fil1" points="-141,-10 199,0 -198,-72 -188,-61 -171,-57 -184,-57 " />
                    <polygon class="fil2" points="199,0 -141,-10 -163,63 -123,9 " />
                    <polygon class="fil3" points="-95,39 -113,32 -123,9 -163,63 -105,53 -108,45 -87,48 -90,45 -103,41 -94,41 " />
                    <path class="fil4" d="M-87 48l-21 -3 3 8 19 -4 -1 -1zm-26 -16l18 7 -2 -1 32 -7 -29 1 11 -4 -24 -1 -16 -18 10 23zm10 9l13 4 -4 -4 -9 0z" />
                    <polygon class="fil1" points="-83,28 -94,32 -65,31 -97,38 -86,49 -67,70 199,0 -123,9 -107,27 " />
                </g>
                <!-- Define the motion path animation -->
                <animateMotion xlink:href="#plane" dur="5s" repeatCount="indefinite" rotate="auto">
                    <mpath xlink:href="#planePath" />
                </animateMotion>
            </svg>
            <div class="form__group field">
                <div>
                    <input type="text" class="form__field" placeholder="Name" name="name" id='searchInput' onkeyup="searchTable()" required />
                <label for="name" class="form__label">Search</label>
                </div>
            </div>
            <div class="table">
                <div class="thead">
                    <div class="tr">
                        <div class="th">
                            Flight
                        </div>
                        <div class="th">
                            Route
                        </div>
                        <div class="th">
                            Seats
                        </div>
                        <div class="th">
                            Flight Start
                        </div>
                        <div class="th">
                            Flight Duration
                        </div>
                    </div>
                </div>
                <div class="tbody">
                    @foreach (var item in Model)
                    {
                        <div class="tr data-row" id="row">
                            <div class="td">
                                F@(item.FlightId.ToString())@(item.DepartureLocation[0])@(item.ArrivalLocation[0])
                            </div>
                            <div class="td">
                                 @Html.DisplayFor(modelItem => item.DepartureLocation) - @Html.DisplayFor(modelItem => item.ArrivalLocation)
                            </div>
                            <div class="td">
                                @Html.DisplayFor(modelItem => item.PassengerCapacity) (@Html.DisplayFor(modelItem => item.BusinessClassCapacity) business class)
                            </div>
                            <div class="td">
                                @Html.DisplayFor(modelItem => item.DepartureDateTime)
                            </div>
                            <div class="td">
                                @((item.ArrivalDateTime - item.DepartureDateTime).ToString(@"hh\:mm")) Hours
                            </div>
                        </div>
                            <div class="partialZone">
                                
                            </div>
                    }
                </div>
            </div>
        </div>
        </div>
    <script>
        let dataRows = document.querySelectorAll(".data-row");

        let partialZones = document.querySelectorAll(".partialZone");
        let isPartialZoneDisplayed = false;

        $(function () {
            dataRows.forEach((row, index) => {
                row.addEventListener("click", (e) => {
                    if (!isPartialZoneDisplayed) {
                        var flightId = row.querySelector('div:first-child').textContent.trim().slice(1,-2);
                        console.log(flightId);
                        $.ajax({
                            type: 'GET',
                            url: '/Reservations/ChoosePassengers',
                            data: { flightId: flightId },
                            success: function (result) {
                                $(partialZones[index]).hide().html(result).fadeIn("slow");
                                isPartialZoneDisplayed = true;
                            },
                            error: function (xhr, status, error) {
                                console.log(xhr.responseText);
                            }
                        });
                    } else {
                        $(partialZones[index]).fadeOut("slow", function () {
                            $(this).html("");
                        });
                        isPartialZoneDisplayed = false;
                    }
                });
            });
        });

        function searchTable() {
            // Declare variables
            var input, filter, table, rows, cells, flightId, departure, arrival, start, duration, i, j, txtValue;
            input = document.getElementById("searchInput");
            filter = input.value.toUpperCase();
            table = document.getElementsByClassName("table")[0];
            rows = table.getElementsByClassName("data-row");

            // Loop through all table rows, and hide those that don't match the search query
            for (i = 0; i < rows.length; i++) {
                cells = rows[i].getElementsByClassName("td");
                flightId = cells[0].textContent || cells[0].innerText;
                departure = cells[1].textContent || cells[1].innerText;
                arrival = cells[2].textContent || cells[2].innerText;
                start = cells[3].textContent || cells[3].innerText;
                duration = cells[4].textContent || cells[4].innerText;
                txtValue = flightId + departure + arrival + start + duration;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    rows[i].style.display = "";
                } else {
                    rows[i].style.display = "none";
                }
            }
        }

        const input = document.querySelector('.form__field');
        input.addEventListener('input', () => {
            const value = input.value;
            const cursorPosition = input.selectionStart;
            const length = value.length;
            const midpoint = Math.floor(length / 2);
            const offset = (cursorPosition - midpoint) * 100 / input.clientWidth;
            const initialIndent = (input.offsetWidth - input.clientWidth) / 2;
            input.style.textIndent = `${initialIndent + offset}%`;
        });
    </script>
</body>
</html>

